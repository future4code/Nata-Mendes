{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Luan\\\\Desktop\\\\Nata-Mendes\\\\modulo-atual\\\\projeto-labefy-1\\\\labefy-app\\\\src\\\\App.js\";\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport CreatorPlaylistForm from \"./components/CreatorPlayList/index.js\";\nimport Header from \"./components/Header/index.js\";\nimport ManagerPlaylistform from \"./components/ManagerPlaylist/index.js\"; // - O usuário deve ser capaz de criar uma playlist de músicas. \n// Para isso, ele só precisa passar um nome. Não podem existir playlists com o mesmo nome.\n// - Deve haver a possibilidade do usuário visualizar todas as suas playlists, em uma lista específica. Nesta lista,\n//  o usuário também pode deletar alguma playlist.\n// - O usuário deve ser capaz de visualizar os detalhes de uma playlist:\n//  o seu nome e as músicas que fazem parte dela.\n// - Para adicionar músicas à playlist, o usuário deve informar: \n// o nome, os artistas relacionados (que pode ser só um cantor ou uma banda) e um link com o arquivo de áudio correspondente a esta música\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ContainerApp = styled.div`\ndisplay: flex;\nflex-direction: column;\nbackground-color: lightgreen;\nwidth: 100vw;\nheight: 100vh;\n`;\n_c = ContainerApp;\n\nclass App extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      currentPage: \"creatorPlaylistForm\"\n    };\n\n    this.changePage = currentPages => {\n      this.setState({\n        currentPage: currentPages\n      });\n    };\n  }\n\n  render() {\n    const renderCurrentpage = () => {\n      if (this.state.currentPage === \"creatorPlaylistForm\") return /*#__PURE__*/_jsxDEV(CreatorPlaylistForm, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 14\n      }, this);else if (this.state.currentPage === \"ManagerPlaylistForm\") return /*#__PURE__*/_jsxDEV(ManagerPlaylistform, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 15\n      }, this);\n    };\n\n    return /*#__PURE__*/_jsxDEV(ContainerApp, {\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        changePage: this.changePage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContainerApp\");","map":{"version":3,"names":["React","styled","CreatorPlaylistForm","Header","ManagerPlaylistform","ContainerApp","div","App","Component","state","currentPage","changePage","currentPages","setState","render","renderCurrentpage"],"sources":["C:/Users/Luan/Desktop/Nata-Mendes/modulo-atual/projeto-labefy-1/labefy-app/src/App.js"],"sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\nimport CreatorPlaylistForm from \"./components/CreatorPlayList/index.js\";\nimport Header from \"./components/Header/index.js\";\nimport ManagerPlaylistform from \"./components/ManagerPlaylist/index.js\";\n\n// - O usuário deve ser capaz de criar uma playlist de músicas. \n// Para isso, ele só precisa passar um nome. Não podem existir playlists com o mesmo nome.\n\n// - Deve haver a possibilidade do usuário visualizar todas as suas playlists, em uma lista específica. Nesta lista,\n//  o usuário também pode deletar alguma playlist.\n\n// - O usuário deve ser capaz de visualizar os detalhes de uma playlist:\n//  o seu nome e as músicas que fazem parte dela.\n\n// - Para adicionar músicas à playlist, o usuário deve informar: \n// o nome, os artistas relacionados (que pode ser só um cantor ou uma banda) e um link com o arquivo de áudio correspondente a esta música\n\nconst ContainerApp = styled.div`\ndisplay: flex;\nflex-direction: column;\nbackground-color: lightgreen;\nwidth: 100vw;\nheight: 100vh;\n`\n\nclass App extends React.Component {\n  state = {\n    currentPage: \"creatorPlaylistForm\"\n  }\n\n\n\nchangePage = (currentPages) => {\n  this.setState({currentPage: currentPages})\n\n}\n\n  render () {\n    const renderCurrentpage = () => {\n      if (this.state.currentPage === \"creatorPlaylistForm\")\n      return <CreatorPlaylistForm/>\n      else if (this.state.currentPage === \"ManagerPlaylistForm\") \n      return  <ManagerPlaylistform/>\n    }\n\n\n  return (\n    <ContainerApp>\n      <Header changePage={this.changePage} />\n      {/* {renderCurrentpage()} */}\n    </ContainerApp>\n  );\n  }\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,mBAAP,MAAgC,uCAAhC;AACA,OAAOC,MAAP,MAAmB,8BAAnB;AACA,OAAOC,mBAAP,MAAgC,uCAAhC,C,CAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;;;AAEA,MAAMC,YAAY,GAAGJ,MAAM,CAACK,GAAI;AAChC;AACA;AACA;AACA;AACA;AACA,CANA;KAAMD,Y;;AAQN,MAAME,GAAN,SAAkBP,KAAK,CAACQ,SAAxB,CAAkC;EAAA;IAAA;IAAA,KAChCC,KADgC,GACxB;MACNC,WAAW,EAAE;IADP,CADwB;;IAAA,KAOlCC,UAPkC,GAOpBC,YAAD,IAAkB;MAC7B,KAAKC,QAAL,CAAc;QAACH,WAAW,EAAEE;MAAd,CAAd;IAED,CAViC;EAAA;;EAYhCE,MAAM,GAAI;IACR,MAAMC,iBAAiB,GAAG,MAAM;MAC9B,IAAI,KAAKN,KAAL,CAAWC,WAAX,KAA2B,qBAA/B,EACA,oBAAO,QAAC,mBAAD;QAAA;QAAA;QAAA;MAAA,QAAP,CADA,KAEK,IAAI,KAAKD,KAAL,CAAWC,WAAX,KAA2B,qBAA/B,EACL,oBAAQ,QAAC,mBAAD;QAAA;QAAA;QAAA;MAAA,QAAR;IACD,CALD;;IAQF,oBACE,QAAC,YAAD;MAAA,uBACE,QAAC,MAAD;QAAQ,UAAU,EAAE,KAAKC;MAAzB;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF;EAMC;;AA3B+B;;AA8BlC,eAAeJ,GAAf"},"metadata":{},"sourceType":"module"}